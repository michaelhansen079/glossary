{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/glossary-detail/glossary-detail.component.html","webpack:///./src/app/glossary-detail/glossary-detail.component.ts","webpack:///./src/app/glossary-form/glossary-form.component.html","webpack:///./src/app/glossary-form/glossary-form.component.ts","webpack:///./src/app/glossary-list/glossary-list.component.html","webpack:///./src/app/glossary-list/glossary-list.component.ts","webpack:///./src/app/glossary.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport {GlossaryListComponent} from './glossary-list/glossary-list.component'\nimport {GlossaryFormComponent} from './glossary-form/glossary-form.component'\nimport {GlossaryDetailComponent} from './glossary-detail/glossary-detail.component'\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {path: '', component: GlossaryListComponent},\n  {path: 'glossary-list', component: GlossaryListComponent},\n  {path: 'glossary-form', component: GlossaryFormComponent},\n  {path: 'glossary-detail/:id', component: GlossaryDetailComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n<nav class=\\\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/glossary-list']\\\">{{title}}</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsExampleDefault\\\" aria-controls=\\\"navbarsExampleDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item mr-1\\\">\\n        <a [routerLink]=\\\"['/glossary-list']\\\">List</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a [routerLink]=\\\"['/glossary-form']\\\">Create</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"jumbotron\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styles: []\n})\nexport class AppComponent {\n  title = 'Glossary';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GlossaryListComponent } from './glossary-list/glossary-list.component';\nimport { GlossaryDetailComponent } from './glossary-detail/glossary-detail.component';\nimport { GlossaryFormComponent } from './glossary-form/glossary-form.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GlossaryListComponent,\n    GlossaryDetailComponent,\n    GlossaryFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<h2>\\n  Detail of a glossary\\n</h2>\\n<form (ngSubmit)=\\\"delete()\\\">\\n  <div class=\\\"form-group row\\\">\\n    <label class=\\\"col-2 col-form-label\\\">English</label>\\n    <input class=\\\"form-control col-10\\\" type=\\\"text\\\" value=\\\"{{glossary.english}}\\\" name=\\\"english\\\" readonly>\\n  </div>\\n\\n  <div class=\\\"form-group row\\\">\\n    <label class=\\\"col-2 col-form-label\\\">Bosnian</label>\\n    <input class=\\\"form-control col-10\\\" type=\\\"text\\\" value=\\\"{{glossary.bosnian}}\\\" name=\\\"bosnian\\\" readonly>\\n  </div>\\n\\n  <div class=\\\"form-group row\\\">\\n    <label class=\\\"col-2 col-form-label\\\">ImageUrl</label>\\n    <input class=\\\"form-control col-10\\\" type=\\\"text\\\" value=\\\"{{glossary.imageUrl}}\\\" name=\\\"imageUrl\\\" readonly>\\n  </div>\\n\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary mr-1\\\">Delete</button>\\n  <a class=\\\"btn btn-secondary\\\" role=\\\"button\\\" [routerLink]=\\\"['/glossary-list']\\\">Back</a>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-glossary-detail',\n  templateUrl: './glossary-detail.component.html',\n  styles: []\n})\nexport class GlossaryDetailComponent implements OnInit {\n\n  private glossary = {\n    id: 1,\n    english: \"money\",\n    bosnian: \"novac\",\n    imageUrl: \"https://d1nhio0ox7pgb.cloudfront.net/_img/o_collection_png/green_dark_grey/256x256/plain/money.png\"\n  }\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  delete () {\n    // call backend - DELETE\n    this.router.navigate(['/glossary-list']);\n  }\n\n\n}\n","module.exports = \"<h2>Create new Glossary</h2>\\n\\n<form (ngSubmit)=\\\"create()\\\">\\n  <div class=\\\"form-group row\\\">\\n    <label class=\\\"col-2 col-form-label\\\">English</label>\\n    <input class=\\\"form-control col-10\\\" type=\\\"text\\\" [(ngModel)]=\\\"glossary.english\\\" name=\\\"english\\\">\\n  </div>\\n\\n  <div class=\\\"form-group row\\\">\\n    <label class=\\\"col-2 col-form-label\\\">Bosnian</label>\\n    <input class=\\\"form-control col-10\\\" type=\\\"text\\\" [(ngModel)]=\\\"glossary.bosnian\\\"  name=\\\"bosnian\\\">\\n  </div>\\n\\n  <div class=\\\"form-group row\\\">\\n    <label class=\\\"col-2 col-form-label\\\">ImageUrl</label>\\n    <input class=\\\"form-control col-10\\\" type=\\\"text\\\" [(ngModel)]=\\\"glossary.imageUrl\\\"  name=\\\"imageUrl\\\">\\n  </div>\\n\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary mr-1\\\">Delete</button>\\n  <a class=\\\"btn btn-secondary\\\" role=\\\"button\\\" [routerLink]=\\\"['/glossary-list']\\\">Back</a>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-glossary-form',\n  templateUrl: './glossary-form.component.html',\n  styles: []\n})\nexport class GlossaryFormComponent implements OnInit {\n\n  private glossary = {\n    english: \"\",\n    bosnian: \"\",\n    imageUrl: \"\"\n  }\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  create() {\n    //call backend - POST\n    this.router.navigate(['/glossary-list']);\n  }\n\n}\n","module.exports = \"<h1>\\n  List all the glossaries - {{nrGlossaries}}\\n</h1>\\n<ul class=\\\"list-unstyled\\\">\\n  <li class=\\\"media my-4\\\" *ngFor=\\\"let glossary of glossaries\\\">\\n    <img class=\\\"d-flex mr-3 img-thumbnail\\\" src=\\\"{{glossary.imageUrl}}\\\"/>\\n    <a [routerLink]=\\\"['/glossary-detail/glossary.id']\\\">\\n      <span class=\\\"mt-0 mb-1\\\">\\n        <h5>{{glossary.english}}</h5>\\n        <h5>{{glossary.bosnian}}</h5>\\n      </span>\\n    </a>\\n\\n  </li>\\n</ul>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {GlossaryService } from '../glossary.service';\n\n@Component({\n  selector: 'app-glossary-list',\n  templateUrl: './glossary-list.component.html',\n  styles: []\n})\nexport class GlossaryListComponent implements OnInit {\n\n  private nrGlossaries: number;\n\n  private glossaries = [\n    {\n      id: 1,\n      english: 'apple',\n      bosnian: 'jabuka',\n      imageUrl: 'https://www.iconexperience.com/_img/v_collection_png/256x256/shadow/apple.png'\n    },\n    {\n      id: 2,\n      english: 'banana',\n      bosnian: 'banana',\n      imageUrl: 'https://www.iconexperience.com/_img/v_collection_png/256x256/shadow/banana.png'\n    }\n  ];\n\n  constructor(private glossaryService: GlossaryService ) { }\n\n  ngOnInit() {\n    this.glossaryService.countGlossaries().subscribe(nr => this.nrGlossaries = nr);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlossaryService {\n\n  constructor(private http: HttpClient) { }\n\n  public countGlossaries(): Observable<number> {\n    return this.http.get<number>('/glossaries/count');\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}